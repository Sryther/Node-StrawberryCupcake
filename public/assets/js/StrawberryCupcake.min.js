/*! StrawberryCupcake 2015-03-15 */
var app=angular.module("StrawberryCupcake",["ui.router","ui.bootstrap","ngCookies","ngResource","uiGmapgoogle-maps"]);app.config(function(a){a.configure({key:"AIzaSyBMA4UIe4S5OjrZlNQx6DDME-xFxg0r-2w",v:"3.17",libraries:"weather,geometry,visualization"})}),app.controller("ConversationsController",["$scope","$rootScope","$stateParams","ResourceService",function(a,b,c,d){var e=d.Conversation;a.conversations=[],a.currentConversation={},a.username="",c.username&&(a.username=c.username),a.getAll=function(){b.toggleLoading(),a.conversation=e.all(null,function(c){a.conversation=c,b.toggleLoading()},function(a){b.toggleLoading(),b.setError(a.message)})},a.get=function(c){e.all({id:c},function(b){a.currentConversation=b,angular.forEach(a.currentConversation,function(b,c){var d=new Date(b.datetime);a.currentConversation[c].datetime=d.toDateString()+" "+d.toLocaleTimeString()})},function(a){b.setError(a.message)})}}]),app.controller("ErrorsController",["$scope","$rootScope",function(a,b){a.error=!1,a.success=!1,a.loading=!1,a.messageError="",a.messageSuccess="",b.toggleLoading=function(){a.loading=!a.loading},b.setError=function(b){a.messageError=b,a.error=!0},b.unsetError=function(){a.messageError="",a.error=!1},b.setSuccess=function(b){a.messageSuccess=b,a.success=!0},b.unsetSuccess=function(){a.messageSuccess="",a.success=!1}}]),app.controller("TableController",["$scope",function(a){a.orderByField="firstName",a.reverseSort=!1}]),app.controller("UsersController",["$scope","$rootScope","$stateParams","ResourceService","uiGmapGoogleMapApi",function(a,b,c,d,e){var f=d.User;a.users=[],a.currentUser={},c.username&&(a.username=c.username),a.numPerPage=20,a.filteredUsers=[],a.currentPage=1,a.selectAll={isSelected:!1},a.getAll=function(){b.toggleLoading(),f.all(null,function(c){a.users=c,angular.forEach(a.users,function(b,c){a.users[c].isSelected=!1}),b.toggleLoading()},function(a){b.toggleLoading(),b.setError(a.message)})},a.get=function(c){f.get({id:c},function(b){a.currentUser=b,a.currentUser.geo=a.currentUser.geo.split(","),a.map={center:{latitude:a.currentUser.geo[0],longitude:a.currentUser.geo[1]},zoom:10}},function(a){b.setError(a.message)})},a.numPages=function(){return Math.ceil(a.users.length/a.numPerPage)},a.pageChanged=function(){var b=(a.currentPage-1)*a.numPerPage,c=b+a.numPerPage;a.filteredUsers=a.users.slice(b,c)},a.$watch("users",function(){a.users.length>0&&a.pageChanged()}),a.$watch("selectAll.isSelected",function(){a.all()}),a.all=function(){angular.forEach(a.users,function(b,c){a.users[c].isSelected=a.selectAll.isSelected})},e.then(function(){a.map={center:{latitude:0,longitude:0},zoom:8}})}]),app.directive("icheck",["$timeout",function(a){return{require:"ngModel",link:function(b,c,d,e){return a(function(){var a;return a=d.value,b.$watch(d.ngModel,function(){$(c).iCheck("update")}),$(c).iCheck({checkboxClass:"icheckbox_square-green",radioClass:"iradio_square-green",increaseArea:"20%"}).on("ifChanged",function(f){return"checkbox"===$(c).attr("type")&&d.ngModel&&b.$apply(function(){return e.$setViewValue(f.target.checked)}),"radio"===$(c).attr("type")&&d.ngModel?b.$apply(function(){return e.$setViewValue(a)}):void 0})})}}}]),app.factory("AuthService",["$http","$window",function(a,b){return{login:function(b){return a.post("/api/sessions",b)},logout:function(){b.sessionStorage.token=!1},isLoggedIn:function(){return"undefined"!==b.sessionStorage.token?!0:!1},getPermissions:function(){}}}]),app.factory("ResourceService",["$resource",function(a){var b={update:{method:"PUT"},all:{method:"GET",isArray:!0}},c={id:"@id"};return{User:a("/api/users/:id",c,b),Conversation:a("/api/conversations/:id",c,b)}}]),app.config(function(a,b){b.otherwise("/404"),a.state("404",{url:"/404",templateUrl:"/ng/errors/404.html"}).state("dashboard",{url:"",templateUrl:"/ng/dashboard/home.html"}).state("users",{url:"/users",templateUrl:"/ng/users/all.html"}).state("getUser",{url:"/users/:username",templateUrl:"/ng/users/get.html"}).state("conversations",{url:"/conversations",templateUrl:"/ng/conversations/all.html"}).state("getConversation",{url:"/conversations/:username",templateUrl:"/ng/conversations/get.html"})});